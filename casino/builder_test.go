// dsl специально for QA team :)
package casino_new

type Сконструировать struct {
	КонструкторИгры  *КонструкторИгры
	КонструкторИгрока *КонструкторИгрока
}

type Кубик struct {
	Счёт int
}

func (к *Кубик) Roll() int {
	return к.Счёт
}

type КонструкторИгры struct {
	Игра *RollDiceGame
}

func (к Сконструировать) ИгруСФиксированнымСчетом(счет int) *КонструкторИгры {
	кубик := &DiceMock{}
	кубик.On("Roll").Return(счет)
	к.КонструкторИгры = &КонструкторИгры{}
	к.КонструкторИгры.Игра = NewRollDiceGame(кубик)
	return к.КонструкторИгры
}

func (к *КонструкторИгры) Поехали() *RollDiceGame {
	return к.Игра
}

func (к Сконструировать) Игру() *КонструкторИгры {
	к.КонструкторИгры = &КонструкторИгры{}
	к.КонструкторИгры.Игра = NewRollDiceGame(new(Dice))
	return к.КонструкторИгры
}

type КонструкторИгрока struct {
	Игрок *Player
	Ставка *Bet
}

func (self Сконструировать) Игрока() *КонструкторИгрока {
	self.КонструкторИгрока = &КонструкторИгрока{}
	self.КонструкторИгрока.Игрок = NewPlayer()

	return self.КонструкторИгрока
}

func (self *КонструкторИгрока) СФишечками(количествоФишек int) *КонструкторИгрока {
	self.Игрок.BuyChips(количествоФишек)
	return self
}

func (self *КонструкторИгрока) ПрисоединитьКИгре(игра *RollDiceGame) *КонструкторИгрока {
	self.Игрок.Join(игра)
	return self
}

func (self *КонструкторИгрока) ПоставитьНа(ставка int) *КонструкторИгрока {
	if self.Ставка == nil {
		self.Ставка = &Bet{}
	}
	self.Ставка.Score = ставка

	return self
}

func (self *КонструкторИгрока) ПоставитьБабки(бабки int) *КонструкторИгрока {
	if self.Ставка == nil {
		self.Ставка = &Bet{}
	}
	self.Ставка.Amount = бабки

	return self
}

func (self *КонструкторИгрока) Поехали() *Player {
	if self.Ставка != nil {
		self.Игрок.Bet(*self.Ставка)
	}

	return self.Игрок
}